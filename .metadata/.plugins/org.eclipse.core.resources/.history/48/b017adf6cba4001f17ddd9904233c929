package com.category;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import com.basic.BasicImpl;
import com.object.CategoryObject;

public class CategoryImpl extends BasicImpl implements Category{

	public CategoryImpl() {
		super("danh_muc");
		// TODO Auto-generated constructor stub
	}

	@Override
	public boolean addCategory(CategoryObject item) {
		String sql = "INSERT INTO danh_muc (ten_danh_muc) VALUES (?)";
        try {
            PreparedStatement pre = this.con.prepareStatement(sql);
            pre.setString(1, item.getTen_danh_muc());
            return this.add(pre); // Calls the parent method for execution
        } catch (SQLException e) {
            System.err.println("Error adding category: " + e.getMessage());
        }
        return false;
	}

	@Override
	public boolean editCategory(CategoryObject item) {
		String sql = "UPDATE danh_muc SET ten_danh_muc = ? WHERE id = ?";
        try {
            PreparedStatement pre = this.con.prepareStatement(sql);
            pre.setString(1, item.getTen_danh_muc());
            pre.setLong(2, item.getId());
            return this.edit(pre); // Calls the parent method for execution
        } catch (SQLException e) {
            System.err.println("Error editing category: " + e.getMessage());
        }
        return false;
	}

	@Override
	public boolean deleteCategory(CategoryObject item) {
		String sql = "DELETE FROM danh_muc WHERE id = ?";
        try {
            PreparedStatement pre = this.con.prepareStatement(sql);
            pre.setLong(1, item.getId());
            return this.delete(pre); // Calls the parent method for execution
        } catch (SQLException e) {
            System.err.println("Error deleting category: " + e.getMessage());
        }
        return false;
	}

	@Override
	public ArrayList<ResultSet> getCategory(CategoryObject similar, int at, byte total) {
		StringBuilder sql = new StringBuilder();
        sql.append("SELECT * FROM danh_muc ");
        
        // Pagination handling
        sql.append("ORDER BY id DESC ");
        sql.append("LIMIT ").append(at).append(", ").append(total).append("; ");
        
        // Query total count of categories
        sql.append("SELECT COUNT(id) AS total FROM danh_muc;");
        
        return this.gets(sql.toString());
	}

	@Override
	public ResultSet getCategory(int id) {
		String sql = "SELECT * FROM danh_muc WHERE id = ?";
        return this.get(sql, id);
	}

	@Override
	public ResultSet getCategory(String username, String userpass) {
		// TODO Auto-generated method stub
		return null;
	}
	
}
